---
# tasks file for lxc

- name: lxc | add ansible repo
  apt_repository: repo=ppa:ansible/ansible

- name: lxc | install system packages
  apt: name={{item}} state=latest update_cache=yes
  with_items:
    - unzip
    - lxc
    - lxc-dev
    - htop
    - dnsmasq
    - iptables-persistent
    - ansible
    - python-pip
    - python-dev
    - gcc

- name: lxc | install lxc-python
  pip: name=lxc-python2 state=latest

- name: lxc | save running containers
  command: lxc-ls -1 --running
  register: running_containers

- name: lxc | ensure dnsmasq config file exists
  file: path=/etc/lxc/dnsmasq.conf state=touch

- name: lxc | set fixed ips for containers
  lineinfile:
    dest: /etc/lxc/dnsmasq.conf
    line: dhcp-host={{item.name}},{{item.ip}}
  with_items: "{{lxc_clones}}"
  register: lxc_net_hosts

- name: lxc | configure lxc network
  template: src=lxc-net.j2 dest=/etc/default/lxc-net
  register: lxc_net_config

- name: lxc | setup lxc nameserver
  lineinfile:
    dest: /etc/dnsmasq.d/lxc
    regexp: ^server=
    line: server=/lxc/{{lxc_ip_address}}
  register: lxc_dnsmasq

- name: lxc | stop running containers
  lxc_container: name={{ item }} state=stopped
  with_items: "{{ running_containers.stdout_lines }}"
  when: lxc_net_config.changed or lxc_net_hosts.changed or lxc_dnsmasq.changed

- name: lxc | remove dnsmasq leases
  file: path=/var/lib/misc/dnsmasq.lxcbr0.leases state=absent
  when: lxc_net_config.changed or lxc_net_hosts.changed or lxc_dnsmasq.changed

- name: lxc | ensure lxc-net config changes applied
  service: name={{ item }} state=restarted
  with_items:
      - lxc-net
      - dnsmasq
  when: lxc_net_config.changed or lxc_net_hosts.changed or lxc_dnsmasq.changed

- name: lxc | reload dnsmasq
  command: killall -s SIGHUP dnsmasq
  when: lxc_net_config.changed or lxc_net_hosts.changed or lxc_dnsmasq.changed

- name: lxc | ensure lxc-net started
  service: name=lxc-net state=started enabled=yes

- name: lxc | restore running containers
  lxc_container: name={{ item }} state=started
  with_items: "{{ running_containers.stdout_lines }}"
  when: lxc_net_config.changed or lxc_net_hosts.changed or lxc_dnsmasq.changed

- name: lxc | create base container
  lxc_container:
    name: "{{ item.name }}"
    template: ubuntu
    template_options: >
        --release {{ item.release }}
        --user {{ item.user }}
        --password {{ item.password }}
        --packages {{ item.packages|join(",") }}
    state: stopped
    container_log: true
  with_items: "{{ lxc_containers }}"

- name: lxc | create clones
  lxc_container:
    name: "{{ item.template }}"
    clone_name: "{{ item.name }}"
    state: stopped
    backing_store: overlayfs
  with_items: "{{ lxc_clones }}"

- name: lxc | setup clones
  lxc_container:
    name: "{{ item.name }}"
    container_config:
      - "lxc.start.auto = 1"
    state: restarted
  with_items: "{{ lxc_clones }}"

- name: lxc | enable port forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    reload: yes

- name: lxc | forward ports to lxc machines
  iptables:
    table: nat
    chain: PREROUTING
    in_interface: eth1
    protocol: tcp
    destination_port: "{{ item.source }}"
    jump: DNAT
    to_destination: "{{ item.target }}"
  with_items: "{{lxc_forwarded_ports}}"

- name: lxc | save port forwardings
  command: invoke-rc.d iptables-persistent save
